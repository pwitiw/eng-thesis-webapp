{
  "_args": [
    [
      "gulp-file@https://registry.npmjs.org/gulp-file/-/gulp-file-0.3.0.tgz",
      "c:\\projects\\RichWebClientTraining\\RichWebClientTypeScript"
    ]
  ],
  "_from": "gulp-file@0.3.0",
  "_id": "gulp-file@0.3.0",
  "_inCache": true,
  "_location": "/gulp-file",
  "_phantomChildren": {
    "clone-stats": "0.0.1",
    "core-util-is": "1.0.2",
    "dateformat": "1.0.12",
    "escape-string-regexp": "1.0.5",
    "inherits": "2.0.1",
    "lodash._escapehtmlchar": "2.4.1",
    "lodash._escapestringchar": "2.4.1",
    "lodash._isnative": "2.4.1",
    "lodash._reunescapedhtml": "2.4.1",
    "lodash._shimkeys": "2.4.1",
    "lodash.defaults": "2.4.1",
    "lodash.isobject": "2.4.1",
    "lodash.values": "2.4.1",
    "multipipe": "0.1.2",
    "object-keys": "0.4.0",
    "string_decoder": "0.10.31"
  },
  "_requested": {
    "name": "gulp-file",
    "raw": "gulp-file@https://registry.npmjs.org/gulp-file/-/gulp-file-0.3.0.tgz",
    "rawSpec": "https://registry.npmjs.org/gulp-file/-/gulp-file-0.3.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/gulp-file/-/gulp-file-0.3.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/gulp-file/-/gulp-file-0.3.0.tgz",
  "_shasum": "e8c4d763f126fb3332fc416e3d1ef46ed67d8d0d",
  "_shrinkwrap": null,
  "_spec": "gulp-file@https://registry.npmjs.org/gulp-file/-/gulp-file-0.3.0.tgz",
  "_where": "c:\\projects\\RichWebClientTraining\\RichWebClientTypeScript",
  "author": {
    "email": "talk@alexmingoia.com",
    "name": "Alex Mingoia"
  },
  "bugs": {
    "url": "https://github.com/alexmingoia/gulp-file/issues"
  },
  "dependencies": {
    "gulp-util": "^2.2.14",
    "through2": "^0.4.1"
  },
  "description": "Create vinyl files from a string or buffer and insert into the Gulp pipeline.",
  "devDependencies": {
    "expect.js": "^0.3.1",
    "gulp": "^3.6.2",
    "mocha": "^1.18.2"
  },
  "homepage": "https://github.com/alexmingoia/gulp-file",
  "keywords": [
    "buffer",
    "file",
    "gulp",
    "plugin",
    "string",
    "vinyl"
  ],
  "license": "BSD",
  "main": "./lib/file.js",
  "name": "gulp-file",
  "optionalDependencies": {},
  "readme": "# gulp-file\n\n[![Build Status](https://secure.travis-ci.org/alexmingoia/gulp-file.png)](http://travis-ci.org/alexmingoia/gulp-file) \n[![NPM version](https://badge.fury.io/js/gulp-file.png)](http://badge.fury.io/js/gulp-file)\n\nCreate vinyl files from a string or buffer and insert into the Gulp pipeline.\n\n## Installation\n\n```sh\nnpm install gulp-file\n```\n\n## API\n\n### plugin(name, source, options)\n\nCreates a vinyl file with the given `name` from `source` string or buffer and\nreturns a transform stream for use in your gulp pipeline.\n\n### plugin(sourceArray, options)\n\nCreates vinyl files for each entry in the array.  Each entry is an object with a `name` and `source` property.  A vinyl file is created with the given `name` and `source` and inserted into the returned transform stream.\n\n## Example\n\n[Primus](https://github.com/primus/primus) outputs the client library as a string. Using `gulp-file` we can\ncreate a vinyl file from the string and insert it into the gulp pipeline:\n\n```javascript\nvar gulp = require('gulp')\n  , file = require('gulp-file');\n\ngulp.task('js', function() {\n  var str = primus.library();\n\n  return gulp.src('scripts/**.js')\n    .pipe(file('primus.js', str))\n    .pipe(gulp.dest('dist'));\n});\n```\n\nUse it at the beginning of your pipeline by setting `src: true`:\n\n```javascript\nvar gulp = require('gulp')\n  , file = require('gulp-file');\n\ngulp.task('js', function() {\n  var str = primus.library();\n\n  return file('primus.js', str, { src: true })\n    .pipe(gulp.dest('dist'));\n});\n```\n\n## Options\n\n### src\n\nCalls `stream.end()` to be used at the beginning of your pipeline in place of\n`gulp.src()`. Default: `false`.\n\n## BSD Licensed\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/alexmingoia/gulp-file.git"
  },
  "scripts": {
    "test": "./node_modules/mocha/bin/mocha test --recursive --reporter spec"
  },
  "version": "0.3.0"
}
